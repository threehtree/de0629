plugins {
    id 'java'
    id 'war'
}

group 'com.ldj'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.1'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly('javax.servlet:javax.servlet-api:4.0.1')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    //lombok //setter,getter, 생성자등 코딩시 반복되는코드 간결화
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    //Spring // 정확한 용도는 모르겟다.
    // https://mvnrepository.com/artifact/org.springframework/spring-core
    implementation 'org.springframework:spring-core:5.3.18'
    implementation 'org.springframework:spring-test:5.3.18'
    implementation 'org.springframework:spring-context:5.3.18'
    implementation 'org.springframework:spring-jdbc:5.3.18'
    implementation 'org.springframework:spring-tx:5.3.18' //트랜젝션 [mybatis,AOP 등 동시작업]
    implementation 'org.springframework:spring-webmvc:5.3.18'


    //log4j2// 작업하면서 로그를 찍어서 확인해야할때
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    implementation 'org.apache.logging.log4j:log4j-core:2.17.2'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
    implementation 'org.apache.logging.log4j:log4j-api:2.17.2'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl
    testImplementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.2'


    //mariaDB jdbc //mariaDB 와 jdbc를 연결해주는 라이브러리
    // https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.4'


    //hikari CP  //mariaDB의 커넥션 풀을 관리
    // https://mvnrepository.com/artifact/com.zaxxer/HikariCP
    implementation 'com.zaxxer:HikariCP:5.0.1'


    //mybatis //DAO를 대신해 DB와 맵핑한다
    // https://mvnrepository.com/artifact/org.mybatis/mybatis
    implementation 'org.mybatis:mybatis:3.5.9'
    // https://mvnrepository.com/artifact/org.mybatis/mybatis-spring
    implementation 'org.mybatis:mybatis-spring:2.0.7'

//----------------여기까지 기본 설정-------------------------------
    //JSTL //jsp에서 조건문 등을 사용하기 위해
    // https://mvnrepository.com/artifact/jstl/jstl
    implementation 'jstl:jstl:1.2'

    //Model Mapper //VO를 DTO형식으로 변환하기 위해[조금만달라져도 못 쓰긴함]
    // https://mvnrepository.com/artifact/org.modelmapper/modelmapper
    implementation 'org.modelmapper:modelmapper:3.1.0'

}

test {
    useJUnitPlatform()
}